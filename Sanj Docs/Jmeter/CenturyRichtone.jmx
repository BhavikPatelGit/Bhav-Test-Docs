<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="world remit api calls for caching" enabled="true">
      <stringProp name="TestPlan.comments">${__P(CACHING2_ENV,wr-api-02.cloudapp.net)} ${__P(CACHING1_ENV,api.foundation.worldremit.com)}</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="CACHING1_ENV" elementType="Argument">
            <stringProp name="Argument.name">CACHING1_ENV</stringProp>
            <stringProp name="Argument.value">${__P(CACHING1_ENV,api.integration.worldremit.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CACHING2_ENV" elementType="Argument">
            <stringProp name="Argument.name">CACHING2_ENV</stringProp>
            <stringProp name="Argument.value">${__P(CACHING1_ENV,api.integration.worldremit.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="SEND_COUNTRY" elementType="Argument">
            <stringProp name="Argument.name">SEND_COUNTRY</stringProp>
            <stringProp name="Argument.value">GB</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RECEIVE_COUNTRY" elementType="Argument">
            <stringProp name="Argument.name">RECEIVE_COUNTRY</stringProp>
            <stringProp name="Argument.value">CN</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PROXY_SERVER" elementType="Argument">
            <stringProp name="Argument.name">PROXY_SERVER</stringProp>
            <stringProp name="Argument.value">192.168.3.1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">localhost _ip</stringProp>
          </elementProp>
          <elementProp name="PORT" elementType="Argument">
            <stringProp name="Argument.name">PORT</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product1" elementType="Argument">
            <stringProp name="Argument.name">product1</stringProp>
            <stringProp name="Argument.value">BNK</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="amount1" elementType="Argument">
            <stringProp name="Argument.name">amount1</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="product2" elementType="Argument">
            <stringProp name="Argument.name">product2</stringProp>
            <stringProp name="Argument.value">CSH</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="amount2" elementType="Argument">
            <stringProp name="Argument.name">amount2</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="api calls authorised" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1435146222000</longProp>
        <longProp name="ThreadGroup.end_time">1435154438000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end">100</stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">C</stringProp>
            <stringProp name="CounterConfig.format">00</stringProp>
            <boolProp name="CounterConfig.per_user">true</boolProp>
          </CounterConfig>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">count = Integer.parseInt(vars.get(&quot;C&quot;));

if  (count % 2 == 0) {
      vars.put (&quot;ENV1&quot;, vars.get(&quot;CACHING1_ENV&quot;));
      vars.put (&quot;ENV2&quot;, vars.get(&quot;CACHING2_ENV&quot;));
             }
            else
              {
       vars.put (&quot;ENV1&quot;, vars.get(&quot;CACHING2_ENV&quot;));
       vars.put (&quot;ENV2&quot;, vars.get(&quot;CACHING1_ENV&quot;));
}

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create User ${SEND_COUNTRY}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;address&quot;:{&#xd;
&quot;address1&quot;:null,&#xd;
&quot;address2&quot;:null,&#xd;
&quot;address3&quot;:null,&#xd;
&quot;city&quot;:null,&#xd;
&quot;country&quot;:{&#xd;
&quot;code&quot;:&quot;gb&quot;,&#xd;
},&#xd;
&quot;house_no&quot;:null,&#xd;
&quot;postcode&quot;:&quot;WR 12&quot;,&#xd;
&quot;town&quot;:null},&#xd;
&quot;email&quot;:&quot;${__eval(${EMAIL_ID_FOR_USER_CREATION})}&quot;,&#xd;
&quot;secret&quot;:&quot;2C9341CA4CF3D87B9E4EB905D6A3EC45&quot;, &#xd;
&quot;gender&quot;:&quot;Male&quot;,&#xd;
&quot;first_name&quot;:&quot;Test&quot;,&#xd;
&quot;middle_name&quot;:&quot;&quot;,&#xd;
&quot;last_name&quot;:&quot;Test&quot;,&#xd;
&quot;mobile_no&quot;:&quot;07742812538&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
            <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">30000</stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/account</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1719478660">EMAIL_ID_FOR_USER_CREATION</stringProp>
                <stringProp name="262461848">FIRST_NAME_FOR_USER_CREATION</stringProp>
                <stringProp name="-1023311150">LAST_NAME_FOR_USER_CREATION</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-365891781">
                  <stringProp name="520447015">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); var milliseconds= d.getMilliseconds(); $EMAILIDFORUSERCREATION=d.getFullYear() + &quot;-&quot;+(month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; +(date&lt;10?&quot;0&quot;+date:date) + &quot;-&quot;+ hours+&quot;-&quot;+minutes+&quot;-&quot;+seconds+&quot;-&quot;+milliseconds+&quot;-&quot; ;, EMAILIDFORUSERCREATION)}${__Random(1,1000)}@example.com</stringProp>
                  <stringProp name="157368284">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $FIRSTNAMEFORUSERCREATION=&quot;FirstNew&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds;, FIRSTNAMEFORUSERCREATION)}${__Random(1,1000)} </stringProp>
                  <stringProp name="-1984566268">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $LASTNAMEFORUSERCREATION=&quot;LastNew&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds;, LASTNAMEFORUSERCREATION)}${__Random(1,1000)} </stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.security.MessageDigest;
import org.apache.commons.codec.binary.Base64;

String passwordToHash = &quot;Test1234&quot;;
String userName = &quot;${__eval(${EMAIL_ID_FOR_USER_CREATION})}&quot;;
String generatedPassword = null;

MessageDigest md = MessageDigest.getInstance(&quot;MD5&quot;);

md.update(passwordToHash.getBytes());
      
            byte[] bytes = md.digest();
        
            StringBuilder sb = new StringBuilder();
            for(int i=0; i&lt; bytes.length ;i++)
            {
                sb.append(Integer.toString((bytes[i] &amp; 0xff) + 0x100, 16).substring(1));
            }

 generatedPassword = sb.toString();
 String stringToBase64 = userName+&quot;:&quot;+generatedPassword;

byte[] encodedBytes = Base64.encodeBase64(stringToBase64.getBytes());
//log.info(&quot;AUTH_KEY :-&quot; + new String(encodedBytes));
vars.put(&quot;AUTH_KEY&quot;, new String(encodedBytes));

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Recipient Creation" enabled="true">
            <stringProp name="TestPlan.comments">to verify if create user is successful</stringProp>
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic ${AUTH_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Profile" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
              <stringProp name="HTTPSampler.proxyPort">${PORT</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/profile</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">EMAIL_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;email&quot;:\&quot;(.+?)\&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">EMAIL_ID_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Recipient" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;gender&quot;: &quot;Ms&quot;,&#xd;
  &quot;first_name&quot;: &quot;${__eval(${UNIQUE_FIRST_NAME})}&quot;,&#xd;
  &quot;middle_name&quot;: &quot;R&quot;,&#xd;
  &quot;last_name&quot;: &quot;${__eval(${UNIQUE_LAST_NAME})}&quot;,&#xd;
  &quot;email&quot;: &quot;${__eval(${UNIQUE_EMAIL_ID})}&quot;,&#xd;
  &quot;mobile&quot;: &quot;7772400790&quot;,&#xd;
  &quot;address&quot;: {&#xd;
    &quot;country&quot;: {&#xd;
      &quot;code&quot;: &quot;${__eval(${RECEIVE_COUNTRY})}&quot;,&#xd;
      &quot;name&quot;: &quot;Jamaica&quot;,&#xd;
      &quot;short_name&quot;: null&#xd;
    },&#xd;
    &quot;city&quot;: &quot;Trinidad&quot;,&#xd;
    &quot;postcode&quot;: &quot;1700&quot;,&#xd;
    &quot;house_no&quot;: &quot;23&quot;,&#xd;
    &quot;town&quot;: &quot;&quot;,&#xd;
    &quot;address1&quot;: &quot;1st street&quot;,&#xd;
    &quot;address2&quot;: &quot;simplicio cruz compd&quot;,&#xd;
    &quot;address3&quot;: &quot;sucat paranaque&quot;&#xd;
  },&#xd;
  &quot;bank&quot;: {&#xd;
    &quot;name&quot;: &quot;ABN Amro bank&quot;,&#xd;
    &quot;code&quot;: &quot;ABNAGB22JSI&quot;,&#xd;
    &quot;branch&quot;: &quot;Manila west&quot;,&#xd;
    &quot;branch_code&quot;: &quot;AB-12890-08&quot;,&#xd;
    &quot;sortcode&quot;: &quot;&quot;,&#xd;
    &quot;address&quot;: {&#xd;
      &quot;country&quot;: {&#xd;
        &quot;code&quot;: &quot;${__eval(${RECEIVE_COUNTRY})}&quot;,&#xd;
        &quot;name&quot;: &quot;Jamaica&quot;,&#xd;
        &quot;short_name&quot;: null&#xd;
      },&#xd;
      &quot;city&quot;: &quot;Trinidad&quot;,&#xd;
      &quot;postcode&quot;: &quot;1700&quot;,&#xd;
      &quot;house_no&quot;: &quot;23&quot;,&#xd;
      &quot;town&quot;: &quot;&quot;,&#xd;
      &quot;address1&quot;: &quot;1st street&quot;,&#xd;
      &quot;address2&quot;: &quot;simplicio cruz compd&quot;,&#xd;
      &quot;address3&quot;: &quot;sucat paranaque&quot;&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
              <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/recipients</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-1021016724">UNIQUE_EMAIL_ID</stringProp>
                  <stringProp name="871097352">UNIQUE_FIRST_NAME</stringProp>
                  <stringProp name="-1665763418">UNIQUE_LAST_NAME</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1588181711">
                    <stringProp name="1413756296">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); var milliseconds= d.getMilliseconds(); $UNIQUEEMAILID=d.getFullYear() + &quot;-&quot;+(month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; +(date&lt;10?&quot;0&quot;+date:date) + &quot;-&quot;+ hours+&quot;-&quot;+minutes+&quot;-&quot;+seconds+&quot;-&quot;+milliseconds+&quot;-&quot; ;, UNIQUEEMAILID)}${__Random(1,1000)}@jmeter.com</stringProp>
                    <stringProp name="-74893796">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $UNIQUEFIRSTNAME=&quot;First&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds ;, UNIQUEFIRSTNAME)}${__Random(1,1000)} </stringProp>
                    <stringProp name="1747323740">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $UNIQUELASTNAME=&quot;Last&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds ;, UNIQUELASTNAME)}${__Random(1,1000)} </stringProp>
                    <stringProp name="0"></stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49587">201</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="RegexExtractor.refname">RECIPIENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">Id: (\d+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">RECIPIENT_ID_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Bank" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;bank&quot;: {&#xd;
    &quot;name&quot;: &quot;Rasta bank&quot;,&#xd;
    &quot;code&quot;: &quot;ABNAGB22JSI&quot;,&#xd;
    &quot;branch&quot;: &quot;Jamaica west&quot;,&#xd;
    &quot;branch_code&quot;: &quot;AB-12890-08&quot;,&#xd;
    &quot;sortcode&quot;: &quot;&quot;,&#xd;
    &quot;address&quot;: {&#xd;
      &quot;country&quot;: {&#xd;
        &quot;code&quot;: &quot;${__eval(${RECEIVE_COUNTRY})}&quot;,&#xd;
        &quot;name&quot;: &quot;Jamaica&quot;,&#xd;
        &quot;short_name&quot;: null&#xd;
      },&#xd;
      &quot;city&quot;: &quot;Trinidad&quot;,&#xd;
      &quot;postcode&quot;: &quot;1700&quot;,&#xd;
      &quot;house_no&quot;: &quot;23&quot;,&#xd;
      &quot;town&quot;: &quot;&quot;,&#xd;
      &quot;address1&quot;: &quot;1st street&quot;,&#xd;
      &quot;address2&quot;: &quot;simplicio cruz compd&quot;,&#xd;
      &quot;address3&quot;: &quot;sucat paranaque&quot;&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
              <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/recipient/${RECIPIENT_ID}/bank</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Recipient By Recipient Id" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
              <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/recipients/${RECIPIENT_ID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">RECIPIENT_EMAIL_ID</stringProp>
                <stringProp name="RegexExtractor.regex">${UNIQUE_EMAIL_ID}</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
                <stringProp name="Scope.variable">RECIPIENT_EMAIL_ID_matchNr</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="BNK" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="calculate price" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/calculate/gb/${product1}?amount=${amount1}&amp;receiveCountry=${RECEIVE_COUNTRY}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="calculation_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">calculation_id_bnk</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;(.*?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CALCULATION_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Receive" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">Receive</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;Receive&quot;:(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CACLCULATION_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Fees" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">Fees</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;Fees&quot;:(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CACLCULATION_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ExchangeRate" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">ExchangeRate</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;ExchangeRate&quot;:(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CACLCULATION_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correspondent_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">correspondent_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;CorrespondentId&quot;:(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CORRESPONDENT_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Transaction" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
       &quot;id&quot;:null,&#xd;
       &quot;recipient_id&quot;:&quot;${__eval(${RECIPIENT_ID})}&quot;,&#xd;
       &quot;receive_country&quot;:&quot;${RECEIVE_COUNTRY}&quot;,&#xd;
       &quot;currency&quot;:null,&#xd;
       &quot;correspondent_id&quot;:&quot;${correspondent_id}&quot;,&#xd;
       &quot;product_code&quot;:&quot;${product1}&quot;,&#xd;
       &quot;payment_method&quot;:&quot;2&quot;,&#xd;
       &quot;Status&quot;:0,&#xd;
       &quot;message&quot;:null,&#xd;
       &quot;time_stamp&quot;:0,&#xd;
       &quot;price&quot;:{&#xd;
		&quot;Id&quot;: &quot;${calculation_id_bnk}&quot;,&#xd;
 		 &quot;Send&quot;: ${amount1},&#xd;
 		 &quot;Receive&quot;: ${Receive},&#xd;
 		 &quot;Fees&quot;: ${Fees},&#xd;
          &quot;PromoCode&quot;:&quot;&quot;,&#xd;
          &quot;ExchangeRate&quot;:${ExchangeRate},&#xd;
          &quot;TimestampValue&quot;: ${__javaScript(Math.round(new Date().getTime() / 1000))}&#xd;
       },&#xd;
       &quot;CreditcardInfo&quot;:null,&#xd;
       &quot;AirtimeTopId&quot;:null,&#xd;
       &quot;Mobile&quot;:null,&#xd;
       &quot;Data&quot;:{&#xd;
          &quot;FLD_ADD_City&quot;:&quot;Manila&quot;,&#xd;
          &quot;FLD_ADD_Line1&quot;:&quot;&quot;,&#xd;
          &quot;FLD_ADD_Line2&quot;:&quot;&quot;,&#xd;
          &quot;FLD_ADD_Line3&quot;:&quot;&quot;&#xd;
       }&#xd;
    }   </stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/transactions</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49587">201</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="TRANSACTION_ID_BNK_${C}" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                  <stringProp name="RegexExtractor.refname">TRANSACTION_ID_BNK</stringProp>
                  <stringProp name="RegexExtractor.regex">Id: (\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">TRANSACTION_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CSH" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="calculate price" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/calculate/gb/${product2}?amount=${amount2}&amp;receiveCountry=${RECEIVE_COUNTRY}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="calculation_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">calculation_id_csh</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;(.*?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CALCULATION_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correspondent_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">correspondent_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;CorrespondentId&quot;:(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CORRESPONDENT_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="amount" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">amount2</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;Send&quot;:(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CORRESPONDENT_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Receive" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">Receive</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;Receive&quot;:(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CORRESPONDENT_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Fees" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">Fees</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;Fees&quot;:(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CORRESPONDENT_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Fees" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">ExchangeRate</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;ExchangeRate&quot;:(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CORRESPONDENT_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Transaction" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
       &quot;id&quot;:null,&#xd;
       &quot;recipient_id&quot;:&quot;${__eval(${RECIPIENT_ID})}&quot;,&#xd;
       &quot;receive_country&quot;:&quot;${RECEIVE_COUNTRY}&quot;,&#xd;
       &quot;currency&quot;:null,&#xd;
       &quot;correspondent_id&quot;:&quot;${correspondent_id}&quot;,&#xd;
       &quot;product_code&quot;:&quot;${product2}&quot;,&#xd;
       &quot;payment_method&quot;:&quot;2&quot;,&#xd;
       &quot;Status&quot;:0,&#xd;
       &quot;message&quot;:null,&#xd;
       &quot;time_stamp&quot;:0,&#xd;
       &quot;price&quot;:{&#xd;
		&quot;Id&quot;: &quot;${calculation_id_csh}&quot;,&#xd;
 		 &quot;Send&quot;: ${amount2},&#xd;
 		 &quot;Receive&quot;: ${Receive},&#xd;
 		 &quot;Fees&quot;: ${Fees},&#xd;
          &quot;PromoCode&quot;:&quot;&quot;,&#xd;
          &quot;ExchangeRate&quot;:${ExchangeRate},&#xd;
          &quot;TimestampValue&quot;: ${__javaScript(Math.round(new Date().getTime() / 1000))}&#xd;
       },&#xd;
       &quot;CreditcardInfo&quot;:null,&#xd;
       &quot;AirtimeTopId&quot;:null,&#xd;
       &quot;Mobile&quot;:null,&#xd;
       &quot;Data&quot;:{&#xd;
          &quot;FLD_ADD_City&quot;:&quot;Manila&quot;,&#xd;
          &quot;FLD_ADD_Line1&quot;:&quot;&quot;,&#xd;
          &quot;FLD_ADD_Line2&quot;:&quot;&quot;,&#xd;
          &quot;FLD_ADD_Line3&quot;:&quot;&quot;&#xd;
       }&#xd;
    }   </stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/transactions</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49587">201</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="TRANSACTION_ID_CSH_${C}" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                  <stringProp name="RegexExtractor.refname">TRANSACTION_ID_CSH</stringProp>
                  <stringProp name="RegexExtractor.regex">Id: (\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">TRANSACTION_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Transaction" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">api/transactions/0${TRANSACTION_ID_CSH}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="JSON Path Assertion" enabled="true">
                  <stringProp name="JSON_PATH">$.recipient_id</stringProp>
                  <stringProp name="EXPECTED_VALUE">${RECIPIENT_ID}</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Transaction" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
              <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">api/transactions</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="api calls authorised" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1435146222000</longProp>
        <longProp name="ThreadGroup.end_time">1435154438000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">count = Integer.parseInt(vars.get(&quot;C&quot;));

if  (count % 2 == 0) {
      vars.put (&quot;ENV1&quot;, vars.get(&quot;CACHING1_ENV&quot;));
      vars.put (&quot;ENV2&quot;, vars.get(&quot;CACHING2_ENV&quot;));
             }
            else
              {
       vars.put (&quot;ENV1&quot;, vars.get(&quot;CACHING2_ENV&quot;));
       vars.put (&quot;ENV2&quot;, vars.get(&quot;CACHING1_ENV&quot;));
}

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Single-Endpoint cache test" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get product for correspondent - cache TEST" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">api/country/send/is</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">correspondent_id_new</stringProp>
                <stringProp name="JSONPATH">$.Id</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get product for correspondent - cache TEST" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">api/country/send/is</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">correspondent_id_new</stringProp>
                <stringProp name="JSONPATH">$.Id</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get product for correspondent - cache TEST" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">api/country/send/is</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
                <stringProp name="VAR">correspondent_id_new</stringProp>
                <stringProp name="JSONPATH">$.Id</stringProp>
                <stringProp name="DEFAULT"></stringProp>
                <stringProp name="VARIABLE"></stringProp>
                <stringProp name="SUBJECT">BODY</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create User" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;address&quot;:{&#xd;
&quot;address1&quot;:null,&#xd;
&quot;address2&quot;:null,&#xd;
&quot;address3&quot;:null,&#xd;
&quot;city&quot;:null,&#xd;
&quot;country&quot;:{&#xd;
&quot;code&quot;:&quot;gb&quot;,&#xd;
},&#xd;
&quot;house_no&quot;:null,&#xd;
&quot;postcode&quot;:&quot;WR 12&quot;,&#xd;
&quot;town&quot;:null},&#xd;
&quot;email&quot;:&quot;${__eval(${EMAIL_ID_FOR_USER_CREATION})}&quot;,&#xd;
&quot;secret&quot;:&quot;2C9341CA4CF3D87B9E4EB905D6A3EC45&quot;, &#xd;
&quot;gender&quot;:&quot;Male&quot;,&#xd;
&quot;first_name&quot;:&quot;Test&quot;,&#xd;
&quot;middle_name&quot;:&quot;&quot;,&#xd;
&quot;last_name&quot;:&quot;Test&quot;,&#xd;
&quot;mobile_no&quot;:&quot;07742812538&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
            <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">30000</stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/account</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1719478660">EMAIL_ID_FOR_USER_CREATION</stringProp>
                <stringProp name="262461848">FIRST_NAME_FOR_USER_CREATION</stringProp>
                <stringProp name="-1023311150">LAST_NAME_FOR_USER_CREATION</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-365891781">
                  <stringProp name="520447015">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); var milliseconds= d.getMilliseconds(); $EMAILIDFORUSERCREATION=d.getFullYear() + &quot;-&quot;+(month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; +(date&lt;10?&quot;0&quot;+date:date) + &quot;-&quot;+ hours+&quot;-&quot;+minutes+&quot;-&quot;+seconds+&quot;-&quot;+milliseconds+&quot;-&quot; ;, EMAILIDFORUSERCREATION)}${__Random(1,1000)}@example.com</stringProp>
                  <stringProp name="157368284">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $FIRSTNAMEFORUSERCREATION=&quot;FirstNew&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds;, FIRSTNAMEFORUSERCREATION)}${__Random(1,1000)} </stringProp>
                  <stringProp name="-1984566268">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $LASTNAMEFORUSERCREATION=&quot;LastNew&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds;, LASTNAMEFORUSERCREATION)}${__Random(1,1000)} </stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">count = Integer.parseInt(vars.get(&quot;C&quot;));

if  (count % 2 == 0) {
      vars.put (&quot;ENV1&quot;, vars.get(&quot;CACHING1_ENV&quot;));
      vars.put (&quot;ENV2&quot;, vars.get(&quot;CACHING2_ENV&quot;));
             }
            else
              {
       vars.put (&quot;ENV1&quot;, vars.get(&quot;CACHING2_ENV&quot;));
       vars.put (&quot;ENV2&quot;, vars.get(&quot;CACHING1_ENV&quot;));
}

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.security.MessageDigest;
import org.apache.commons.codec.binary.Base64;

String passwordToHash = &quot;Test1234&quot;;
String userName = &quot;${__eval(${EMAIL_ID_FOR_USER_CREATION})}&quot;;
String generatedPassword = null;

MessageDigest md = MessageDigest.getInstance(&quot;MD5&quot;);

md.update(passwordToHash.getBytes());
      
            byte[] bytes = md.digest();
        
            StringBuilder sb = new StringBuilder();
            for(int i=0; i&lt; bytes.length ;i++)
            {
                sb.append(Integer.toString((bytes[i] &amp; 0xff) + 0x100, 16).substring(1));
            }

 generatedPassword = sb.toString();
 String stringToBase64 = userName+&quot;:&quot;+generatedPassword;

byte[] encodedBytes = Base64.encodeBase64(stringToBase64.getBytes());
//log.info(&quot;AUTH_KEY :-&quot; + new String(encodedBytes));
vars.put(&quot;AUTH_KEY&quot;, new String(encodedBytes));

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Recipient Creation" enabled="true">
            <stringProp name="TestPlan.comments">to verify if create user is successful</stringProp>
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic ${AUTH_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Profile" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
              <stringProp name="HTTPSampler.proxyPort">${PORT</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/profile</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="JSON Path Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.email</stringProp>
                <stringProp name="EXPECTED_VALUE">${EMAIL_ID_FOR_USER_CREATION}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">EMAIL_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;email&quot;:\&quot;(.+?)\&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">EMAIL_ID_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="444769866">${EMAIL_ID_FOR_USER_CREATION}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">1</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">EMAIL_ID_1</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Recipient - PH" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
                &quot;gender&quot;:&quot;Ms&quot;,&#xd;
                &quot;first_name&quot;:&quot;${__eval(${UNIQUE_FIRST_NAME})}&quot;,&#xd;
                &quot;middle_name&quot;:&quot;R&quot;,&#xd;
                &quot;last_name&quot;:&quot;${__eval(${UNIQUE_LAST_NAME})}&quot;,&#xd;
                &quot;email&quot;:&quot;${__eval(${UNIQUE_EMAIL_ID})}&quot;,&#xd;
                &quot;mobile&quot;:&quot;7772400790&quot;,&#xd;
 &#xd;
                &quot;address&quot;:&#xd;
                {&#xd;
                                &quot;country&quot;:&#xd;
                                {&#xd;
                                                &quot;code&quot;:&quot;${__eval(${RECEIVE_COUNTRY})}&quot;,&#xd;
                                                &quot;name&quot;:&quot;Philippines&quot;,&#xd;
                                                &quot;short_name&quot;:null&#xd;
                                },&#xd;
                               &#xd;
                                &quot;city&quot;:&quot;Manila&quot;,&#xd;
                                &quot;postcode&quot;:&quot;1700&quot;,&#xd;
                                &quot;house_no&quot;:&quot;23&quot;,&#xd;
                                &quot;town&quot;:&quot;&quot;,&#xd;
                                &quot;address1&quot;:&quot;1st street&quot;,&#xd;
                                &quot;address2&quot;:&quot;simplicio cruz compd&quot;,&#xd;
                                &quot;address3&quot;:&quot;sucat paranaque&quot;&#xd;
                }&#xd;
}        </stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
              <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/recipients</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-1021016724">UNIQUE_EMAIL_ID</stringProp>
                  <stringProp name="871097352">UNIQUE_FIRST_NAME</stringProp>
                  <stringProp name="-1665763418">UNIQUE_LAST_NAME</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1588181711">
                    <stringProp name="1413756296">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); var milliseconds= d.getMilliseconds(); $UNIQUEEMAILID=d.getFullYear() + &quot;-&quot;+(month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; +(date&lt;10?&quot;0&quot;+date:date) + &quot;-&quot;+ hours+&quot;-&quot;+minutes+&quot;-&quot;+seconds+&quot;-&quot;+milliseconds+&quot;-&quot; ;, UNIQUEEMAILID)}${__Random(1,1000)}@jmeter.com</stringProp>
                    <stringProp name="-74893796">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $UNIQUEFIRSTNAME=&quot;First&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds ;, UNIQUEFIRSTNAME)}${__Random(1,1000)} </stringProp>
                    <stringProp name="1747323740">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $UNIQUELASTNAME=&quot;Last&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds ;, UNIQUELASTNAME)}${__Random(1,1000)} </stringProp>
                    <stringProp name="0"></stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49587">201</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="RegexExtractor.refname">RECIPIENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">Id: (\d+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">RECIPIENT_ID_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Recipient - Ghana" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
                &quot;gender&quot;:&quot;Ms&quot;,&#xd;
                &quot;first_name&quot;:&quot;${__eval(${UNIQUE_FIRST_NAME})}&quot;,&#xd;
                &quot;middle_name&quot;:&quot;R&quot;,&#xd;
                &quot;last_name&quot;:&quot;${__eval(${UNIQUE_LAST_NAME})}&quot;,&#xd;
                &quot;email&quot;:&quot;${__eval(${UNIQUE_EMAIL_ID_GH})}&quot;,&#xd;
                &quot;mobile&quot;:&quot;7772400790&quot;,&#xd;
 &#xd;
                &quot;address&quot;:&#xd;
                {&#xd;
                                &quot;country&quot;:&#xd;
                                {&#xd;
                                                &quot;code&quot;:&quot;GH&quot;&#xd;
                                },&#xd;
                               &#xd;
                                &quot;city&quot;:&quot;Manila&quot;,&#xd;
                                &quot;postcode&quot;:&quot;1700&quot;,&#xd;
                                &quot;house_no&quot;:&quot;23&quot;,&#xd;
                                &quot;town&quot;:&quot;&quot;,&#xd;
                                &quot;address1&quot;:&quot;1st street&quot;,&#xd;
                                &quot;address2&quot;:&quot;simplicio cruz compd&quot;,&#xd;
                                &quot;address3&quot;:&quot;sucat paranaque&quot;&#xd;
                }&#xd;
}        </stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
              <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/recipients</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="871097352">UNIQUE_FIRST_NAME</stringProp>
                  <stringProp name="-1665763418">UNIQUE_LAST_NAME</stringProp>
                  <stringProp name="-150740844">UNIQUE_EMAIL_ID_GH</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1778714840">
                    <stringProp name="-74893796">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $UNIQUEFIRSTNAME=&quot;First&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds ;, UNIQUEFIRSTNAME)}${__Random(1,1000)} </stringProp>
                    <stringProp name="1747323740">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $UNIQUELASTNAME=&quot;Last&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds ;, UNIQUELASTNAME)}${__Random(1,1000)} </stringProp>
                    <stringProp name="-1476595833">GH${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); var milliseconds= d.getMilliseconds(); $UNIQUEEMAILID=d.getFullYear() + &quot;-&quot;+(month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; +(date&lt;10?&quot;0&quot;+date:date) + &quot;-&quot;+ hours+&quot;-&quot;+minutes+&quot;-&quot;+seconds+&quot;-&quot;+milliseconds+&quot;-&quot; ;, UNIQUEEMAILID)}${__Random(1,1000)}@jmeter.com</stringProp>
                    <stringProp name="0"></stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49587">201</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="RegexExtractor.refname">RECIPIENT_ID_GH</stringProp>
                <stringProp name="RegexExtractor.regex">Id: (\d+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">RECIPIENT_ID_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="TestPlan.comments">to verify if create user is successful</stringProp>
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic ${AUTH_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller " enabled="true">
              <stringProp name="TestPlan.comments">To verify the response code from create recipient should be 201</stringProp>
              <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Recipient By Recipient Id" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/recipients/${RECIPIENT_ID}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">RECIPIENT_EMAIL_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">${UNIQUE_EMAIL_ID}</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                  <stringProp name="Scope.variable">RECIPIENT_EMAIL_ID_matchNr</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49">1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">1</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">RECIPIENT_EMAIL_ID_matchNr</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                  <stringProp name="ConstantTimer.delay">5000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Recipient By Recipient Id - GH" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/recipients/${RECIPIENT_ID_GH}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">RECIPIENT_EMAIL_ID_GH</stringProp>
                  <stringProp name="RegexExtractor.regex">${UNIQUE_EMAIL_ID_GH}</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                  <stringProp name="Scope.variable">RECIPIENT_EMAIL_ID_matchNr</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49">1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">1</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">RECIPIENT_EMAIL_ID_GH_matchNr</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                  <stringProp name="ConstantTimer.delay">5000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Recipient" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
                &quot;gender&quot;:&quot;Ms&quot;,&#xd;
                &quot;first_name&quot;:&quot;${__eval(${UNIQUE_FIRST_NAME})}&quot;,&#xd;
                &quot;middle_name&quot;:&quot;R&quot;,&#xd;
                &quot;last_name&quot;:&quot;${__eval(${UNIQUE_LAST_NAME})}&quot;,&#xd;
                &quot;email&quot;:&quot;${__eval(${UNIQUE_EMAIL_ID_FOR_UPDATE})}&quot;,&#xd;
                &quot;mobile&quot;:&quot;+44 7772400790&quot;,&#xd;
 &#xd;
                &quot;address&quot;:&#xd;
                {&#xd;
                                &quot;country&quot;:&#xd;
                                {&#xd;
                                                &quot;code&quot;:&quot;${__eval(${RECEIVE_COUNTRY})}&quot;,&#xd;
                                                &quot;name&quot;:&quot;Philippines&quot;,&#xd;
                                                &quot;short_name&quot;:null&#xd;
                                },&#xd;
                               &#xd;
                                &quot;city&quot;:&quot;Manila&quot;,&#xd;
                                &quot;postcode&quot;:&quot;1700&quot;,&#xd;
                                &quot;house_no&quot;:&quot;23&quot;,&#xd;
                                &quot;town&quot;:&quot;&quot;,&#xd;
                                &quot;address1&quot;:&quot;1st street&quot;,&#xd;
                                &quot;address2&quot;:&quot;simplicio cruz compd&quot;,&#xd;
                                &quot;address3&quot;:&quot;sucat paranaque&quot;&#xd;
                }&#xd;
}        </stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/recipients/${RECIPIENT_ID}</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="TestPlan.comments">Update the email id </stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="1936534994">UNIQUE_EMAIL_ID_FOR_UPDATE</stringProp>
                    <stringProp name="0"></stringProp>
                    <stringProp name="0"></stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="2140861596">
                      <stringProp name="1413756296">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); var milliseconds= d.getMilliseconds(); $UNIQUEEMAILID=d.getFullYear() + &quot;-&quot;+(month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; +(date&lt;10?&quot;0&quot;+date:date) + &quot;-&quot;+ hours+&quot;-&quot;+minutes+&quot;-&quot;+seconds+&quot;-&quot;+milliseconds+&quot;-&quot; ;, UNIQUEEMAILID)}${__Random(1,1000)}@jmeter.com</stringProp>
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49590">204</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                  <stringProp name="ConstantTimer.delay">4000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Recipient By Recipient Id To Verify Updated Value" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/recipients/${RECIPIENT_ID}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">RECIPIENT_EMAIL_ID_AFTER_UPDATE</stringProp>
                  <stringProp name="RegexExtractor.regex">${UNIQUE_EMAIL_ID_FOR_UPDATE}</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                  <stringProp name="Scope.variable">RECIPIENT_EMAIL_ID_matchNr</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49">1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">1</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">RECIPIENT_EMAIL_ID_AFTER_UPDATE_matchNr</stringProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                  <stringProp name="ConstantTimer.delay">4000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
                <stringProp name="maximumValue">3</stringProp>
                <stringProp name="minimumValue">1</stringProp>
                <stringProp name="outputFormat"></stringProp>
                <boolProp name="perThread">true</boolProp>
                <stringProp name="randomSeed"></stringProp>
                <stringProp name="variableName">TransactionCount</stringProp>
              </RandomVariableConfig>
              <hashTree/>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Calculate Loop" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">1</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="calculate price" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                  <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/calculate/gb/csh?amount=30&amp;receiveCountry=ph</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49587">201</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="UK to PH - BDO" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${TransactionCount}</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="calculate price" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                  <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/calculate/gb/csh?amount=10&amp;receiveCountry=ph</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49587">201</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="calculation_id" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">calculation_id</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;(.*?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">CACLCULATION_ID_NOT_FOUND</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correspondent_id" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correspondent_id</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;CorrespondentId&quot;:(\d+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">CORRESPONDENT_ID_NOT_FOUND</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Transaction" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
       &quot;id&quot;:null,&#xd;
       &quot;recipient_id&quot;:&quot;${__eval(${RECIPIENT_ID})}&quot;,&#xd;
       &quot;receive_country&quot;:&quot;PH&quot;,&#xd;
       &quot;currency&quot;:null,&#xd;
       &quot;correspondent_id&quot;:&quot;286&quot;,&#xd;
       &quot;product_code&quot;:&quot;CSH&quot;,&#xd;
       &quot;payment_method&quot;:&quot;2&quot;,&#xd;
       &quot;Status&quot;:0,&#xd;
       &quot;message&quot;:null,&#xd;
       &quot;time_stamp&quot;:0,&#xd;
       &quot;price&quot;:{&#xd;
		&quot;Id&quot;: &quot;${calculation_id}&quot;,&#xd;
 		 &quot;Send&quot;: 10,&#xd;
 		 &quot;Receive&quot;: 648,&#xd;
 		 &quot;Fees&quot;: 1.9,&#xd;
          &quot;PromoCode&quot;:&quot;&quot;,&#xd;
          &quot;ExchangeRate&quot;:64.78599,&#xd;
          &quot;TimestampValue&quot;: ${__javaScript(Math.round(new Date().getTime() / 1000))}&#xd;
       },&#xd;
       &quot;CreditcardInfo&quot;:null,&#xd;
       &quot;AirtimeTopId&quot;:null,&#xd;
       &quot;Mobile&quot;:null,&#xd;
       &quot;Data&quot;:{&#xd;
          &quot;FLD_ADD_City&quot;:&quot;Manila&quot;,&#xd;
          &quot;FLD_ADD_Line1&quot;:&quot;&quot;,&#xd;
          &quot;FLD_ADD_Line2&quot;:&quot;&quot;,&#xd;
          &quot;FLD_ADD_Line3&quot;:&quot;&quot;&#xd;
       }&#xd;
    }   </stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                  <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/transactions</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49587">201</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                    <stringProp name="RegexExtractor.refname">TRANSACTION_ID</stringProp>
                    <stringProp name="RegexExtractor.regex">Id: (\d+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">TRANSACTION_ID_NOT_FOUND</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                    <stringProp name="ConstantTimer.delay">5000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Transaction" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                  <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">api/transactions/0${TRANSACTION_ID}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="JSON Path Assertion" enabled="true">
                    <stringProp name="JSON_PATH">$.recipient_id</stringProp>
                    <stringProp name="EXPECTED_VALUE">${RECIPIENT_ID}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="UK to GH - UnityLink" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${TransactionCount}</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="calculate price" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                  <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/calculate/gb/csh?amount=20&amp;receiveCountry=gh</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49587">201</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="calculation_id" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">calculation_id</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;(.*?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">CACLCULATION_ID_NOT_FOUND</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correspondent_id" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correspondent_id</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;CorrespondentId&quot;:(\d+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">CORRESPONDENT_ID_NOT_FOUND</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Transaction" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
       &quot;id&quot;:null,&#xd;
       &quot;recipient_id&quot;:&quot;${__eval(${RECIPIENT_ID_GH})}&quot;,&#xd;
       &quot;receive_country&quot;:&quot;GH&quot;,&#xd;
       &quot;currency&quot;:null,&#xd;
       &quot;correspondent_id&quot;:&quot;284&quot;,&#xd;
       &quot;product_code&quot;:&quot;CSH&quot;,&#xd;
       &quot;payment_method&quot;:&quot;2&quot;,&#xd;
       &quot;Status&quot;:0,&#xd;
       &quot;message&quot;:null,&#xd;
       &quot;time_stamp&quot;:0,&#xd;
       &quot;price&quot;:{&#xd;
		&quot;Id&quot;: &quot;${calculation_id}&quot;,&#xd;
 		 &quot;Send&quot;: 10,&#xd;
 		 &quot;Receive&quot;: 648,&#xd;
 		 &quot;Fees&quot;: 1.9,&#xd;
          &quot;PromoCode&quot;:&quot;&quot;,&#xd;
          &quot;ExchangeRate&quot;:64.78599,&#xd;
          &quot;TimestampValue&quot;: ${__javaScript(Math.round(new Date().getTime() / 1000))}&#xd;
       },&#xd;
       &quot;CreditcardInfo&quot;:null,&#xd;
       &quot;AirtimeTopId&quot;:null,&#xd;
       &quot;Mobile&quot;:null,&#xd;
       &quot;Data&quot;:{&#xd;
          &quot;FLD_ADD_City&quot;:&quot;Manila&quot;,&#xd;
          &quot;FLD_ADD_Line1&quot;:&quot;&quot;,&#xd;
          &quot;FLD_ADD_Line2&quot;:&quot;&quot;,&#xd;
          &quot;FLD_ADD_Line3&quot;:&quot;&quot;&#xd;
       }&#xd;
    }   </stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                  <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/transactions</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49587">201</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                    <stringProp name="RegexExtractor.refname">TRANSACTION_ID</stringProp>
                    <stringProp name="RegexExtractor.regex">Id: (\d+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">TRANSACTION_ID_NOT_FOUND</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                    <stringProp name="ConstantTimer.delay">5000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Transaction" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                  <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">api/transactions/0${TRANSACTION_ID}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="JSON Path Assertion" enabled="true">
                    <stringProp name="JSON_PATH">$.recipient_id</stringProp>
                    <stringProp name="EXPECTED_VALUE">${RECIPIENT_ID}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="UK to PH - Cebuana" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">${TransactionCount}</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="calculate price" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                  <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/calculate/gb/csh?amount=20&amp;receiveCountry=ph</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49587">201</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="calculation_id" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">calculation_id</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;(.*?)&quot;</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">CACLCULATION_ID_NOT_FOUND</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correspondent_id" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">correspondent_id</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;CorrespondentId&quot;:(\d+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">CORRESPONDENT_ID_NOT_FOUND</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Transaction" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
       &quot;id&quot;:null,&#xd;
       &quot;recipient_id&quot;:&quot;${__eval(${RECIPIENT_ID})}&quot;,&#xd;
       &quot;receive_country&quot;:&quot;PH&quot;,&#xd;
       &quot;currency&quot;:null,&#xd;
       &quot;correspondent_id&quot;:&quot;120&quot;,&#xd;
       &quot;product_code&quot;:&quot;CSH&quot;,&#xd;
       &quot;payment_method&quot;:&quot;2&quot;,&#xd;
       &quot;Status&quot;:0,&#xd;
       &quot;message&quot;:null,&#xd;
       &quot;time_stamp&quot;:0,&#xd;
       &quot;price&quot;:{&#xd;
		&quot;Id&quot;: &quot;${calculation_id}&quot;,&#xd;
 		 &quot;Send&quot;: 10,&#xd;
 		 &quot;Receive&quot;: 648,&#xd;
 		 &quot;Fees&quot;: 1.9,&#xd;
          &quot;PromoCode&quot;:&quot;&quot;,&#xd;
          &quot;ExchangeRate&quot;:64.78599,&#xd;
          &quot;TimestampValue&quot;: ${__javaScript(Math.round(new Date().getTime() / 1000))}&#xd;
       },&#xd;
       &quot;CreditcardInfo&quot;:null,&#xd;
       &quot;AirtimeTopId&quot;:null,&#xd;
       &quot;Mobile&quot;:null,&#xd;
       &quot;Data&quot;:{&#xd;
          &quot;FLD_ADD_City&quot;:&quot;Manila&quot;,&#xd;
          &quot;FLD_ADD_Line1&quot;:&quot;&quot;,&#xd;
          &quot;FLD_ADD_Line2&quot;:&quot;&quot;,&#xd;
          &quot;FLD_ADD_Line3&quot;:&quot;&quot;&#xd;
       }&#xd;
    }   </stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                  <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/transactions</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49587">201</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                    <stringProp name="RegexExtractor.refname">TRANSACTION_ID</stringProp>
                    <stringProp name="RegexExtractor.regex">Id: (\d+)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">TRANSACTION_ID_NOT_FOUND</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                    <stringProp name="ConstantTimer.delay">5000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Transaction" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                  <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">api/transactions/0${TRANSACTION_ID}</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="49586">200</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="JSON Path Assertion" enabled="true">
                    <stringProp name="JSON_PATH">$.recipient_id</stringProp>
                    <stringProp name="EXPECTED_VALUE">${RECIPIENT_ID}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                  </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Recipient" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/recipients/${RECIPIENT_ID}</stringProp>
                <stringProp name="HTTPSampler.method">DELETE</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49590">204</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test_salesForce" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">3</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1435146222000</longProp>
        <longProp name="ThreadGroup.end_time">1435154438000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">100</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">C</stringProp>
          <stringProp name="CounterConfig.format">00</stringProp>
          <boolProp name="CounterConfig.per_user">true</boolProp>
        </CounterConfig>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">1000</stringProp>
          <stringProp name="RandomTimer.range">3000</stringProp>
        </GaussianRandomTimer>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">count = Integer.parseInt(vars.get(&quot;C&quot;));

if  (count % 2 == 0) {
      vars.put (&quot;ENV1&quot;, vars.get(&quot;CACHING1_ENV&quot;));
      vars.put (&quot;ENV2&quot;, vars.get(&quot;CACHING2_ENV&quot;));
             }
            else
              {
       vars.put (&quot;ENV1&quot;, vars.get(&quot;CACHING2_ENV&quot;));
       vars.put (&quot;ENV2&quot;, vars.get(&quot;CACHING1_ENV&quot;));
}

</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create User" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;address&quot;:{&#xd;
&quot;address1&quot;:null,&#xd;
&quot;address2&quot;:null,&#xd;
&quot;address3&quot;:null,&#xd;
&quot;city&quot;:null,&#xd;
&quot;country&quot;:{&#xd;
&quot;code&quot;:&quot;gb&quot;,&#xd;
},&#xd;
&quot;house_no&quot;:null,&#xd;
&quot;postcode&quot;:&quot;WR 12&quot;,&#xd;
&quot;town&quot;:null},&#xd;
&quot;email&quot;:&quot;${__eval(${EMAIL_ID_FOR_USER_CREATION})}&quot;,&#xd;
&quot;secret&quot;:&quot;2C9341CA4CF3D87B9E4EB905D6A3EC45&quot;, &#xd;
&quot;gender&quot;:&quot;Male&quot;,&#xd;
&quot;first_name&quot;:&quot;Test&quot;,&#xd;
&quot;middle_name&quot;:&quot;&quot;,&#xd;
&quot;last_name&quot;:&quot;Test&quot;,&#xd;
&quot;mobile_no&quot;:&quot;07742812538&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
            <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">30000</stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/account</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1719478660">EMAIL_ID_FOR_USER_CREATION</stringProp>
                <stringProp name="262461848">FIRST_NAME_FOR_USER_CREATION</stringProp>
                <stringProp name="-1023311150">LAST_NAME_FOR_USER_CREATION</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-737255837">
                  <stringProp name="-1225574572">SF_01${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); var milliseconds= d.getMilliseconds(); $EMAILIDFORUSERCREATION=d.getFullYear() + &quot;-&quot;+(month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; +(date&lt;10?&quot;0&quot;+date:date) + &quot;-&quot;+ hours+&quot;-&quot;+minutes+&quot;-&quot;+seconds+&quot;-&quot;+milliseconds+&quot;-&quot; ;, EMAILIDFORUSERCREATION)}${__Random(1,1000)}@example.com</stringProp>
                  <stringProp name="157368284">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $FIRSTNAMEFORUSERCREATION=&quot;FirstNew&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds;, FIRSTNAMEFORUSERCREATION)}${__Random(1,1000)} </stringProp>
                  <stringProp name="-1984566268">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $LASTNAMEFORUSERCREATION=&quot;LastNew&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds;, LASTNAMEFORUSERCREATION)}${__Random(1,1000)} </stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">count = Integer.parseInt(vars.get(&quot;C&quot;));

if  (count % 2 == 0) {
      vars.put (&quot;ENV1&quot;, vars.get(&quot;CACHING1_ENV&quot;));
      vars.put (&quot;ENV2&quot;, vars.get(&quot;CACHING2_ENV&quot;));
             }
            else
              {
       vars.put (&quot;ENV1&quot;, vars.get(&quot;CACHING2_ENV&quot;));
       vars.put (&quot;ENV2&quot;, vars.get(&quot;CACHING1_ENV&quot;));
}

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.security.MessageDigest;
import org.apache.commons.codec.binary.Base64;

String passwordToHash = &quot;Test1234&quot;;
String userName = &quot;${__eval(${EMAIL_ID_FOR_USER_CREATION})}&quot;;
String generatedPassword = null;

MessageDigest md = MessageDigest.getInstance(&quot;MD5&quot;);

md.update(passwordToHash.getBytes());
      
            byte[] bytes = md.digest();
        
            StringBuilder sb = new StringBuilder();
            for(int i=0; i&lt; bytes.length ;i++)
            {
                sb.append(Integer.toString((bytes[i] &amp; 0xff) + 0x100, 16).substring(1));
            }

 generatedPassword = sb.toString();
 String stringToBase64 = userName+&quot;:&quot;+generatedPassword;

byte[] encodedBytes = Base64.encodeBase64(stringToBase64.getBytes());
//log.info(&quot;AUTH_KEY :-&quot; + new String(encodedBytes));
vars.put(&quot;AUTH_KEY&quot;, new String(encodedBytes));

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller - Recipient Creation" enabled="true">
            <stringProp name="TestPlan.comments">to verify if create user is successful</stringProp>
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic ${AUTH_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Profile" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
              <stringProp name="HTTPSampler.proxyPort">${PORT</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/profile</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="JSON Path Assertion" enabled="true">
                <stringProp name="JSON_PATH">$.email</stringProp>
                <stringProp name="EXPECTED_VALUE">${EMAIL_ID_FOR_USER_CREATION}</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">EMAIL_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;email&quot;:\&quot;(.+?)\&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">EMAIL_ID_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="444769866">${EMAIL_ID_FOR_USER_CREATION}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">1</intProp>
                <stringProp name="Assertion.scope">variable</stringProp>
                <stringProp name="Scope.variable">EMAIL_ID_1</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Recipient - PH" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
                &quot;gender&quot;:&quot;Ms&quot;,&#xd;
                &quot;first_name&quot;:&quot;${__eval(${UNIQUE_FIRST_NAME})}&quot;,&#xd;
                &quot;middle_name&quot;:&quot;R&quot;,&#xd;
                &quot;last_name&quot;:&quot;${__eval(${UNIQUE_LAST_NAME})}&quot;,&#xd;
                &quot;email&quot;:&quot;${__eval(${UNIQUE_EMAIL_ID})}&quot;,&#xd;
                &quot;mobile&quot;:&quot;7772400790&quot;,&#xd;
 &#xd;
                &quot;address&quot;:&#xd;
                {&#xd;
                                &quot;country&quot;:&#xd;
                                {&#xd;
                                                &quot;code&quot;:&quot;${__eval(${RECEIVE_COUNTRY})}&quot;,&#xd;
                                                &quot;name&quot;:&quot;Philippines&quot;,&#xd;
                                                &quot;short_name&quot;:null&#xd;
                                },&#xd;
                               &#xd;
                                &quot;city&quot;:&quot;Manila&quot;,&#xd;
                                &quot;postcode&quot;:&quot;1700&quot;,&#xd;
                                &quot;house_no&quot;:&quot;23&quot;,&#xd;
                                &quot;town&quot;:&quot;&quot;,&#xd;
                                &quot;address1&quot;:&quot;1st street&quot;,&#xd;
                                &quot;address2&quot;:&quot;simplicio cruz compd&quot;,&#xd;
                                &quot;address3&quot;:&quot;sucat paranaque&quot;&#xd;
                }&#xd;
}        </stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
              <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/recipients</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-1021016724">UNIQUE_EMAIL_ID</stringProp>
                  <stringProp name="871097352">UNIQUE_FIRST_NAME</stringProp>
                  <stringProp name="-1665763418">UNIQUE_LAST_NAME</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1588181711">
                    <stringProp name="1413756296">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); var milliseconds= d.getMilliseconds(); $UNIQUEEMAILID=d.getFullYear() + &quot;-&quot;+(month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; +(date&lt;10?&quot;0&quot;+date:date) + &quot;-&quot;+ hours+&quot;-&quot;+minutes+&quot;-&quot;+seconds+&quot;-&quot;+milliseconds+&quot;-&quot; ;, UNIQUEEMAILID)}${__Random(1,1000)}@jmeter.com</stringProp>
                    <stringProp name="-74893796">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $UNIQUEFIRSTNAME=&quot;First&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds ;, UNIQUEFIRSTNAME)}${__Random(1,1000)} </stringProp>
                    <stringProp name="1747323740">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); $UNIQUELASTNAME=&quot;Last&quot;+d.getFullYear() +(month&lt;10?&quot;0&quot;+month:month) +(date&lt;10?&quot;0&quot;+date:date) + hours+minutes+seconds ;, UNIQUELASTNAME)}${__Random(1,1000)} </stringProp>
                    <stringProp name="0"></stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49587">201</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="RegexExtractor.refname">RECIPIENT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">Id: (\d+)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">RECIPIENT_ID_NOT_FOUND</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
                <stringProp name="ConstantTimer.delay">5000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="TestPlan.comments">to verify if create user is successful</stringProp>
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Basic ${AUTH_KEY}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller " enabled="true">
              <stringProp name="TestPlan.comments">To verify the response code from create recipient should be 201</stringProp>
              <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Recipient By Recipient Id" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/recipients/${RECIPIENT_ID}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">RECIPIENT_EMAIL_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">${UNIQUE_EMAIL_ID}</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                  <stringProp name="Scope.variable">RECIPIENT_EMAIL_ID_matchNr</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49">1</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">1</intProp>
                  <stringProp name="Assertion.scope">variable</stringProp>
                  <stringProp name="Scope.variable">RECIPIENT_EMAIL_ID_matchNr</stringProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Recipient" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
&quot;bank&quot;:&#xd;
{&#xd;
&quot;name&quot;: &quot;ABN Amro bank&quot;,&#xd;
&quot;code&quot;: &quot;ABNAGB22JSI&quot;,&#xd;
&quot;branch&quot;: &quot;Manila west&quot;,&#xd;
&quot;branch_code&quot;: &quot;AB-12890-08&quot;,&#xd;
&quot;sortcode&quot;: &quot;&quot;&#xd;
},&#xd;
&quot;bank_account_no&quot;:&quot;91785620&quot;,&#xd;
&quot;account_type&quot;:&quot;1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/recipient/${RECIPIENT_ID}/bank</stringProp>
                <stringProp name="HTTPSampler.method">PUT</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="TestPlan.comments">Update the email id </stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="1936534994">UNIQUE_EMAIL_ID_FOR_UPDATE</stringProp>
                    <stringProp name="0"></stringProp>
                    <stringProp name="0"></stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="2140861596">
                      <stringProp name="1413756296">${__javaScript(var d=new Date(); var date=d.getDate();  var month=d.getMonth()+1;  var hours = d.getHours(); var minutes= d.getMinutes(); var seconds= d.getSeconds(); var milliseconds= d.getMilliseconds(); $UNIQUEEMAILID=d.getFullYear() + &quot;-&quot;+(month&lt;10?&quot;0&quot;+month:month) + &quot;-&quot; +(date&lt;10?&quot;0&quot;+date:date) + &quot;-&quot;+ hours+&quot;-&quot;+minutes+&quot;-&quot;+seconds+&quot;-&quot;+milliseconds+&quot;-&quot; ;, UNIQUEEMAILID)}${__Random(1,1000)}@jmeter.com</stringProp>
                      <stringProp name="0"></stringProp>
                      <stringProp name="0"></stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49587">201</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="calculate price" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/calculate/gb/bnk?amount=50&amp;receiveCountry=ph</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49587">201</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="calculation_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">calculation_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;Id&quot;:&quot;(.*?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CACLCULATION_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="correspondent_id" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">correspondent_id</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;CorrespondentId&quot;:(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CORRESPONDENT_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Transaction" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
       &quot;id&quot;:null,&#xd;
       &quot;recipient_id&quot;:&quot;${__eval(${RECIPIENT_ID})}&quot;,&#xd;
       &quot;receive_country&quot;:&quot;ph&quot;,&#xd;
       &quot;currency&quot;:null,&#xd;
       &quot;correspondent_id&quot;:&quot;570&quot;,&#xd;
       &quot;product_code&quot;:&quot;BNK&quot;,&#xd;
       &quot;payment_method&quot;:&quot;2&quot;,&#xd;
       &quot;Status&quot;:0,&#xd;
       &quot;message&quot;:null,&#xd;
       &quot;time_stamp&quot;:0,&#xd;
       &quot;price&quot;:{&#xd;
		&quot;Id&quot;: &quot;${calculation_id}&quot;,&#xd;
 		 &quot;Send&quot;: 10,&#xd;
 		 &quot;Receive&quot;: 648,&#xd;
 		 &quot;Fees&quot;: 1.9,&#xd;
          &quot;PromoCode&quot;:&quot;&quot;,&#xd;
          &quot;ExchangeRate&quot;:64.78599,&#xd;
          &quot;TimestampValue&quot;: ${__javaScript(Math.round(new Date().getTime() / 1000))}&#xd;
       },&#xd;
       &quot;CreditcardInfo&quot;:null,&#xd;
       &quot;AirtimeTopId&quot;:null,&#xd;
       &quot;Mobile&quot;:null,&#xd;
       &quot;Data&quot;:{&#xd;
          &quot;FLD_ADD_City&quot;:&quot;Manila&quot;,&#xd;
          &quot;FLD_ADD_Line1&quot;:&quot;&quot;,&#xd;
          &quot;FLD_ADD_Line2&quot;:&quot;&quot;,&#xd;
          &quot;FLD_ADD_Line3&quot;:&quot;&quot;&#xd;
       }&#xd;
    }   </stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV2}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/transactions</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49587">201</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                  <stringProp name="RegexExtractor.refname">TRANSACTION_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">Id: (\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">TRANSACTION_ID_NOT_FOUND</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Recipient" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${ENV1}</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.proxyHost">${PROXY_SERVER}</stringProp>
                <stringProp name="HTTPSampler.proxyPort">${PORT}</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/recipients/${RECIPIENT_ID}</stringProp>
                <stringProp name="HTTPSampler.method">DELETE</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49590">204</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
